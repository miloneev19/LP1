Classification 

import numpy as np
import pandas as pd 
df=pd.red_csv("/content/Admission_Predict_Ver1.1.csv")
df.columns
from sklearn.preprocessing imoort Binarizer 
bi=Binarizer(threshold=0.75)
df['Chance of Admit ']=bi.fit_transform(df[['Chance of Admit ']])
df
x=df.drop('Chance of Admit ',axis=1)
y=df['Chance of Admit ']
y=y.astype('int')
y
y.value_counts()
from sklearn.model_selection import train_test_split 
x_train,x_test,y_train,y_test=train_test_split(x,y)
from sklearn.tree import DecisionTreeClassifier 
classifier=DecisionTreeClassifier(random_state=0)
classfier.fit(x_train,y_train)
from sklearn import tree 
import matplotlib.pyplot as plt 
plt.figure(figsize=(30,30))
tree.plot_tree(classifier,filled=True, fontsize=16)
plt.show()
from sklearn.metrices import classification_report 
y_pred=classifier.predict(x_test)
print(classification_report(y_test,y_pred))
from sklearn.metrics import ConfusionMatrixDisplay
ConfusionMatrixDisplay.from_predictions(y_test,y_pred)


